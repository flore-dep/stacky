import { Controller } from "@hotwired/stimulus";
import { Chart, registerables } from "chart.js";
Chart.register(...registerables);
const _Chartjs = class _Chartjs extends Controller {
  connect() {
    const element = this.hasCanvasTarget ? this.canvasTarget : this.element;
    this.chart = new Chart(element.getContext("2d"), {
      type: this.typeValue,
      data: this.chartData,
      options: this.chartOptions
    });
  }
  disconnect() {
    this.chart.destroy(), this.chart = void 0;
  }
  get chartData() {
    return this.hasDataValue || console.warn("[@stimulus-components/chartjs] You need to pass data as JSON to see the chart."), this.dataValue;
  }
  get chartOptions() {
    return {
      ...this.defaultOptions,
      ...this.optionsValue
    };
  }
  get defaultOptions() {
    return {};
  }
};
_Chartjs.targets = ["canvas"], _Chartjs.values = {
  type: {
    type: String,
    default: "line"
  },
  data: Object,
  options: Object
};
let Chartjs = _Chartjs;
export {
  Chartjs as default
};
